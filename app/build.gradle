plugins {
    alias(libs.plugins.com.android.application)
    alias(libs.plugins.org.jetbrains.kotlin.android)
    alias(libs.plugins.apollo3)
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace 'com.gustavoeliseu.pokedex'
    compileSdk 34

    buildFeatures {
        buildConfig true
    }

    defaultConfig {
        applicationId "com.gustavoeliseu.pokedex"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "POKEAPI_URL", "\"https://pokeapi.co/api/v2/\""
            buildConfigField "String", "GRAPHQLAPI_URL", "\"https://beta.pokeapi.co/graphql/v1beta\""
            buildConfigField "okhttp3.logging.HttpLoggingInterceptor.Level", "INTERCEPTOR_LEVEL", "okhttp3.logging.HttpLoggingInterceptor.Level.HEADERS"
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "POKEAPI_URL", "\"https://pokeapi.co/api/v2/\""
            buildConfigField "String", "GRAPHQLAPI_URL", "\"https://beta.pokeapi.co/graphql/v1beta\""
            buildConfigField "okhttp3.logging.HttpLoggingInterceptor.Level", "INTERCEPTOR_LEVEL", "okhttp3.logging.HttpLoggingInterceptor.Level.BODY"
        }
        localHost {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "POKEAPI_URL", "\"https://10.0.2.2:8080/api/v2/\""
            buildConfigField "String", "GRAPHQLAPI_URL", "\"http://10.0.2.2:8080/v1/graphql\""
            buildConfigField "okhttp3.logging.HttpLoggingInterceptor.Level", "INTERCEPTOR_LEVEL", "okhttp3.logging.HttpLoggingInterceptor.Level.BODY"
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

apollo {
    service("service") {
        packageName.set("com.gustavoeliseu.pokedex")
        srcDir("src/main/graphql")
        // instruct the compiler to generate Kotlin models
        generateKotlinModels.set(true)
    }
}

dependencies {
    implementation(project(":domain"))
    implementation(libs.androidx.ktx)
    implementation platform(libs.kotlin.bom)
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.compose.bom)
    implementation (libs.compose.ui)
    implementation (libs.compose.graphics)
    implementation libs.androidx.ui.tooling.preview
    implementation(libs.material3)
    implementation libs.firebase.crashlytics.ktx
    implementation libs.firebase.analytics.ktx
    implementation libs.kotlinx.coroutines.play.services
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.compose.bom)
    androidTestImplementation (libs.compose.junit)
    debugImplementation(libs.compose.tooling)
    debugImplementation(libs.compose.test)

    // Navigation
    implementation libs.androidx.navigation.compose

    // AndroidX Lifecycle
    implementation libs.androidx.lifecycle.viewmodel.compose
    implementation libs.androidx.lifecycle.livedata.ktx
    implementation libs.androidx.lifecycle.runtime.compose

    // Network
    implementation(libs.apollo.runtime)
    implementation(libs.apollo.api)
    implementation(libs.apollo.cache)
    implementation(libs.apollo.cache.sqlite)

    implementation libs.okhttp
    implementation libs.logging.interceptor

    // Paging
    implementation libs.androidx.paging.compose

    // Coil
    implementation(libs.coil.compose)

    // Palette
    implementation(libs.palette)

    // Dagger Hilt
    implementation(libs.hilt)
    kapt(libs.hilt.compiler)
    implementation(libs.hilt.navigation)
}

kapt {
    correctErrorTypes true
}